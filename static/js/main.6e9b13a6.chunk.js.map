{"version":3,"sources":["modals/weather/index.js","utils/const.js","utils/local-storage.js","components/card/styles/index.js","components/card/card.jsx","images/preloader.gif","components/loader/styles/index.js","components/loader/loader.jsx","components/search/styles/index.js","components/search/search.jsx","components/weather/styles/index.js","components/weather/weather.jsx","modals/weather/init.js","components/app/styles/index.js","components/app/app.jsx","styles/global.js","index.js"],"names":["$url","createStore","$city","fetchFx","createEffect","url","fetch","method","res","json","fetchWeatherByCity","attach","effect","source","mapParams","params","$cities","addCitiesEvent","createEvent","deleteCityEvent","$isLoading","getLocalStorage","searches","localStorage","getItem","JSON","parse","saveLocalStorage","string","indexOf","push","setItem","stringify","removeSearches","CardArticle","styled","article","CardContent","div","CardRow","CardCol","props","justify","CardSpan","span","fontSize","CardImg","img","CardDelete","Card","image","city","temperature","time","conditions","tempMax","tempMin","onDelete","getTemp","temp","Math","round","ref","useRef","src","alt","onClick","console","log","current","innerHTML","LoaderImg","Loader","loader","SearchForm","form","SearchWrapper","SearchButton","button","SearchInput","input","Search","useState","value","setValue","isLoading","useStore","onSubmit","e","preventDefault","className","title","type","name","placeholder","onChange","target","WeatherSection","section","WeatherWrapper","WeatherContent","WeatherTitle","h2","WeatherScroll","WeatherScrollWrap","Weather","citiesState","useEffect","cities","update","setInterval","citiesToUpdate","map","item","clearInterval","length","main","weather","description","icon","temp_max","temp_min","id","on","doneData","_","dataCity","localCities","find","dataCities","state","deleteCity","newState","filter","newStateString","pending","isPending","AppWrapper","App","createGlobalStyle","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.6e9b13a6.chunk.js","sourcesContent":["import { createStore, createEvent, createEffect } from \"effector\";\nimport { attach } from \"effector\";\nimport { API_KEY, URL_API } from \"../../utils/const\";\n\nexport const $url = createStore(URL_API); // стор для url\nexport const $city = createStore({}); // стор для данных одного города\n\n// эффект для POST запроса\nexport const fetchFx = createEffect(async (url) => {\n  const res = await fetch(url, {\n    method: \"POST\"\n  });\n\n  return res.json();\n});\n\n// запрос данных погоды по одному городу\nexport const fetchWeatherByCity = attach({\n  effect: fetchFx,\n  source: $url,\n  mapParams: (params, source) =>\n    `${source}weather?q=${params}&lang=ru&APPID=${API_KEY}`\n});\n\nexport const $cities = createStore([]); // стор для хранения данных городов\n\nexport const addCitiesEvent = createEvent(\"событие добавления городов\");\nexport const deleteCityEvent = createEvent(\n  \"событие удаления города из $cities\"\n);\n\nexport const updateCitiesEvent = createEvent(\"событие обновления городов\");\n\nexport const $isLoading = createStore(false);\n","export const URL_API = \"https://api.openweathermap.org/data/2.5/\";\nexport const API_KEY = \"d7bf260fb0f276e0731eb04e214d5cda\";\n\n// запасной API_KEY, если вдруг один из ключей заблокиркуют из-за превышения запросов\n// export const API_KEY = \"1eb5d177c062fccb2758fa557651791d\";\n","export const getLocalStorage = () => {\n  let searches = localStorage.getItem(\"cities\");\n  if (searches) {\n    return JSON.parse(searches);\n  } else {\n    return [];\n  }\n};\n\nexport const saveLocalStorage = (string) => {\n  let searches = getLocalStorage();\n  if (!searches || searches.indexOf(string) > -1) {\n    return false;\n  }\n  searches.push(string);\n  localStorage.setItem(\"cities\", JSON.stringify(searches));\n  return true;\n};\n\nexport const removeSearches = () => {\n  localStorage.setItem(\"cities\", JSON.stringify([]));\n};\n","import styled from \"styled-components\";\n\nexport const CardArticle = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 149px;\n  background-color: #393e50;\n  border-radius: 20px;\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);\n`;\n\nexport const CardContent = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 20px;\n  border-radius: 20px;\n`;\n\nexport const CardRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CardCol = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: ${(props) => props.justify || \"stretch\"};\n  text-align: left;\n  gap: 5px;\n`;\n\nexport const CardSpan = styled.span`\n  font-size: ${(props) => props.fontSize};\n`;\n\nexport const CardImg = styled.img`\n  height: 54px;\n`;\n\nexport const CardDelete = styled.span`\n  z-index: 1;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 16px;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    color: #ff6053;\n  }\n`;\n","import { useRef } from \"react\";\nimport {\n  CardArticle,\n  CardCol,\n  CardContent,\n  CardDelete,\n  CardImg,\n  CardRow,\n  CardSpan\n} from \"./styles\";\n\nconst Card = ({\n  city,\n  time,\n  temperature,\n  conditions,\n  img,\n  tempMax,\n  tempMin,\n  onDelete\n}) => {\n  const getTemp = (temp) => Math.round(temp - 273);\n  const getImg = (image) => `https://openweathermap.org/img/wn/${image}@2x.png`;\n  const ref = useRef();\n\n  const handleCardClick = () => {\n    console.log(\"delete \", ref.current.innerHTML);\n    onDelete(ref.current.innerHTML);\n  };\n\n  return (\n    <CardArticle>\n      <CardContent>\n        <CardRow>\n          <CardCol>\n            <CardSpan fontSize=\"18px\" ref={ref}>\n              {city}\n            </CardSpan>\n          </CardCol>\n          <CardSpan fontSize=\"48px\">{getTemp(temperature)}°</CardSpan>\n        </CardRow>\n\n        <CardRow>\n          <CardCol justify=\"flex-end\">\n            <CardSpan fontSize=\"14px\">{conditions}</CardSpan>\n            <CardSpan fontSize=\"14px\">\n              Макс.: {getTemp(tempMax)}°, мин.: {getTemp(tempMin)}°\n            </CardSpan>\n          </CardCol>\n\n          <CardImg src={getImg(img)} alt={conditions} />\n          <CardDelete onClick={handleCardClick}>x</CardDelete>\n        </CardRow>\n      </CardContent>\n    </CardArticle>\n  );\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/preloader.1e6f5a70.gif\";","import styled from \"styled-components\";\n\nexport const LoaderImg = styled.img`\n  width: 24px;\n  height: 24px;\n`;\n","import loader from \"../../images/preloader.gif\";\nimport { LoaderImg } from \"./styles\";\n\nconst Loader = () => {\n  return <LoaderImg src={loader} alt=\"идет загрузка\" />;\n};\n\nexport default Loader;\n","import styled from \"styled-components\";\n\nexport const SearchForm = styled.form`\n  display: flex;\n  width: 100%;\n  margin: 20px auto;\n  margin-bottom: 10px;\n  padding: 0 10px;\n`;\n\nexport const SearchWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 24px 1fr 24px;\n  gap: 8px;\n  align-items: center;\n  box-sizing: border-box;\n  padding: 8px 12px;\n  border: 1px solid transparent;\n  border-radius: 16px;\n  background-color: #ffffff;\n\n  &:focus-within button {\n    background-color: #050510;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  width: 24px;\n  height: 24px;\n  mask-position: center;\n  mask-repeat: no-repeat;\n  background-color: #c3c3c6;\n\n  -webkit-mask-image: url(https://raw.githubusercontent.com/RayFreedom88/app-weather-effector/d80271d74bd59767471570aded1393e05688f413/src/images/search.svg);\n  mask-image: url(https://raw.githubusercontent.com/RayFreedom88/app-weather-effector/d80271d74bd59767471570aded1393e05688f413/src/images/search.svg);\n  -webkit-mask-size: 20px;\n  -webkit-mask-position: center;\n  -webkit-mask-repeat: no-repeat;\n  cursor: pointer;\n`;\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  height: 20px;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  font-family: \"Raleway\", sans-serif;\n`;\n","import { useStore } from \"effector-react\";\nimport { useState } from \"react\";\nimport { $isLoading, fetchWeatherByCity } from \"../../modals/weather\";\nimport Loader from \"../loader/loader\";\nimport { SearchButton, SearchForm, SearchInput, SearchWrapper } from \"./styles\";\n\nconst Search = () => {\n  const [value, setValue] = useState(\"\");\n  const isLoading = useStore($isLoading);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(\"add \", value);\n    fetchWeatherByCity(value);\n    setValue(\"\");\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchWrapper>\n        <SearchButton\n          className=\"search__btn\"\n          aria-label=\"Поиск\"\n          title=\"Поиск\"\n        />\n\n        <SearchInput\n          type=\"text\"\n          name=\"city\"\n          placeholder=\"Поиск по городам...\"\n          value={value}\n          onChange={handleChange}\n        />\n        {isLoading && <Loader />}\n      </SearchWrapper>\n    </SearchForm>\n  );\n};\n\nexport default Search;\n","import styled from \"styled-components\";\n\nexport const WeatherSection = styled.section`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.6);\n  border-radius: 20px;\n  position: fixed;\n  top: calc(50% - 675px / 2);\n  left: calc(50% - 320px / 2);\n  height: 675px;\n  width: 320px;\n  background-color: #393e5b;\n  overflow: hidden;\n  color: #ffffff;\n`;\n\nexport const WeatherWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  box-shadow: 0 0 10px 10px rgba(0, 0, 0, 0.2) inset;\n  padding: 15px;\n`;\n\nexport const WeatherContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 100%;\n  height: 100%;\n  background: inherit;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const WeatherTitle = styled.h2`\n  margin: 0 10px;\n  margin-top: 20px;\n  text-align: left;\n`;\n\nexport const WeatherScroll = styled.div`\n  width: 100%;\n  height: 493px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  padding-right: 5px;\n  padding-left: 10px;\n`;\n\nexport const WeatherScrollWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 270px;\n  height: 100%;\n  background: inherit;\n`;\n","import { useStore } from \"effector-react\";\nimport { useEffect } from \"react\";\nimport {\n  $cities,\n  addCitiesEvent,\n  deleteCityEvent,\n  fetchWeatherByCity\n} from \"../../modals/weather\";\nimport { getLocalStorage, removeSearches } from \"../../utils/local-storage\";\nimport Card from \"../card/card\";\nimport Search from \"../search/search\";\nimport {\n  WeatherContent,\n  WeatherScroll,\n  WeatherScrollWrap,\n  WeatherSection,\n  WeatherTitle,\n  WeatherWrapper\n} from \"./styles\";\n\nconst Weather = () => {\n  const citiesState = useStore($cities);\n\n  useEffect(() => {\n    if (!localStorage.cities) fetchWeatherByCity(\"москва\");\n    addCitiesEvent(getLocalStorage());\n  }, [citiesState]);\n\n  useEffect(() => {\n    // обновление данных через каждые 60 секунд\n    const update = setInterval(() => {\n      console.log(\"update\");\n      const citiesToUpdate = [];\n      getLocalStorage().map((item) => citiesToUpdate.push(item.name));\n      removeSearches();\n      citiesToUpdate.map((item) => fetchWeatherByCity(item));\n    }, 60000);\n    return () => clearInterval(update);\n  }, []);\n\n  return (\n    <WeatherSection>\n      <WeatherWrapper>\n        <WeatherContent>\n          <WeatherTitle>Погода</WeatherTitle>\n          <Search />\n\n          <WeatherScroll>\n            <WeatherScrollWrap>\n              {citiesState.length > 0 ? (\n                citiesState.map((city) => (\n                  <Card\n                    city={city.name}\n                    temperature={city.main.temp}\n                    conditions={city.weather[0].description}\n                    img={city.weather[0].icon}\n                    tempMax={city.main.temp_max}\n                    tempMin={city.main.temp_min}\n                    key={city.id}\n                    onDelete={deleteCityEvent}\n                  />\n                ))\n              ) : (\n                <p>Добавьте город</p>\n              )}\n            </WeatherScrollWrap>\n          </WeatherScroll>\n        </WeatherContent>\n      </WeatherWrapper>\n    </WeatherSection>\n  );\n};\n\nexport default Weather;\n","import {\n  getLocalStorage,\n  saveLocalStorage,\n  removeSearches\n} from \"../../utils/local-storage\";\nimport {\n  $cities,\n  $city,\n  updateCitiesEvent,\n  addCitiesEvent,\n  deleteCityEvent,\n  fetchFx,\n  $isLoading\n} from \"./index\";\n\n// fetchFx.doneData.watch((data) => {\n//   console.log(\"fetchFx: \", data);\n// });\n\n// вариант 2\n$city.on(fetchFx.doneData, (_, dataCity) => {\n  const localCities = getLocalStorage();\n  if (localCities.length === 0 && dataCity.name) {\n    saveLocalStorage(dataCity);\n    return dataCity;\n  }\n\n  if (localCities.find((item) => item.name === dataCity.name)) {\n    return dataCity;\n  }\n\n  if (dataCity.name) {\n    saveLocalStorage(dataCity);\n    return dataCity;\n  }\n});\n\n$cities\n  .on(addCitiesEvent, (_, dataCities) => dataCities)\n  .on(deleteCityEvent, (state, deleteCity) => {\n    const newState = state.filter((city) => city.name !== deleteCity);\n    const newStateString = JSON.stringify([...newState]);\n    removeSearches();\n    localStorage.setItem(\"cities\", newStateString);\n  });\n\n$isLoading.on(fetchFx.pending, (_, isPending) => isPending);\n","import styled from \"styled-components\";\n\nexport const AppWrapper = styled.div`\n  text-align: center;\n  background-image: url(https://wallpaperaccess.com/full/2629319.png);\n  background-size: cover;\n  min-height: 100vh;\n`;\n","import Weather from \"../weather/weather\";\nimport \"../../modals/init\";\nimport { AppWrapper } from \"./styles\";\n\nconst App = () => {\n  return (\n    <AppWrapper>\n      <main>\n        <h1 className=\"visually-hidden\">Прогноз погоды</h1>\n\n        <Weather />\n      </main>\n    </AppWrapper>\n  );\n};\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    font-family: \"Raleway\", sans-serif;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  a {\n    text-decoration: none;\n    color: #000;\n  }\n\n  .visually-hidden {\n    position: absolute;\n\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: 0;\n    padding: 0;\n\n    white-space: nowrap;\n\n    clip-path: inset(100%);\n    clip: rect(0 0 0 0);\n    overflow: hidden;\n  }\n\n  ::-webkit-scrollbar {\n    width: 5px;\n    height: 12px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: #2f2f37;\n    border-radius: 5px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #ff6053;\n    border-radius: 5px;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: transparent;\n  }\n`;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./components/app/app\";\nimport GlobalStyles from \"./styles/global\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <GlobalStyles />\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}