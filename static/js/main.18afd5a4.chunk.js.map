{"version":3,"sources":["utils/const.js","models/weather/index.js","utils/local-storage.js","components/card/styles/index.js","components/card/card.jsx","images/preloader.gif","components/loader/styles/index.js","components/loader/loader.jsx","components/search/styles/index.js","components/search/search.jsx","components/weather/styles/index.js","components/weather/weather.jsx","models/weather/init.js","components/app/styles/index.js","components/app/app.jsx","styles/global.js","index.js"],"names":["mockDataError","id","weather","description","main","temp","temp_min","temp_max","name","$url","createStore","$city","fetchFx","createEffect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","res","wrap","_context","prev","next","fetch","method","sent","abrupt","json","stop","_x","apply","arguments","fetchWeatherByCity","attach","effect","source","mapParams","params","concat","$cities","addCitiesEvent","createEvent","deleteCityEvent","$isLoading","getLocalStorage","searches","localStorage","getItem","JSON","parse","saveLocalStorage","string","indexOf","push","setItem","stringify","removeSearches","CardArticle","styled","motion","article","_templateObject","_taggedTemplateLiteral","CardContent","div","_templateObject2","CardRow","_templateObject3","CardCol","_templateObject4","props","justify","CardSpan","span","_templateObject5","fontSize","CardImg","img","_templateObject6","CardDelete","_templateObject7","Card","image","city","temperature","time","conditions","tempMax","tempMin","onDelete","getTemp","Math","round","ref","useRef","handleCardClick","console","log","current","innerHTML","animationConfig","initial","x","opacity","animate","exit","_jsx","variants","children","_jsxs","onClick","src","alt","LoaderImg","Loader","loader","SearchForm","form","SearchWrapper","SearchButton","button","SearchInput","input","Search","_useState","useState","_useState2","_slicedToArray","value","setValue","isLoading","useStore","onSubmit","e","preventDefault","className","title","type","placeholder","onChange","target","WeatherSection","section","WeatherWrapper","WeatherContent","WeatherTitle","h2","WeatherScroll","WeatherScrollWrap","Weather","citiesState","isExceedingLimit","code","useEffect","cities","update","setInterval","citiesToUpdate","map","item","clearInterval","AnimatePresence","length","icon","on","doneData","_","dataCity","localCities","find","dataCities","state","deleteCity","newState","filter","newStateString","_toConsumableArray","pending","isPending","AppWrapper","App","createGlobalStyle","rootElement","document","getElementById","createRoot","render","StrictMode","GlobalStyles"],"mappings":"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","file":"static/js/main.18afd5a4.chunk.js","sourcesContent":["export const URL_API = \"https://api.openweathermap.org/data/2.5/\";\nexport const API_KEY = \"d7bf260fb0f276e0731eb04e214d5cda\";\n\n// запасной API_KEY, если вдруг один из ключей заблокиркуют из-за превышения запросов\n// export const API_KEY = \"1eb5d177c062fccb2758fa557651791d\";\n\nexport const mockDataError = {\n  id: 42,\n  weather: [{ description: \"пасмурно\" }],\n  main: {\n    temp: \"\",\n    temp_min: \"\",\n    temp_max: \"\"\n  },\n  name: \"Ошибка 429\"\n};\n","import { createStore, createEvent, createEffect } from \"effector\";\nimport { attach } from \"effector\";\nimport { API_KEY, URL_API } from \"../../utils/const\";\n\nexport const $url = createStore(URL_API);\nexport const $city = createStore({});\n\nexport const fetchFx = createEffect(async (url) => {\n  const res = await fetch(url, {\n    method: \"POST\"\n  });\n\n  return res.json();\n});\n\n// запрос данных погоды по одному городу\nexport const fetchWeatherByCity = attach({\n  effect: fetchFx,\n  source: $url,\n  mapParams: (params, source) =>\n    `${source}weather?q=${params}&lang=ru&APPID=${API_KEY}`\n});\n\nexport const $cities = createStore([]);\n\nexport const addCitiesEvent = createEvent(\"событие добавления городов\");\nexport const deleteCityEvent = createEvent(\n  \"событие удаления города из $cities\"\n);\n\nexport const updateCitiesEvent = createEvent(\"событие обновления городов\");\n\nexport const $isLoading = createStore(false);\n","export const getLocalStorage = () => {\n  let searches = localStorage.getItem(\"cities\");\n  if (searches) {\n    return JSON.parse(searches);\n  } else {\n    return [];\n  }\n};\n\nexport const saveLocalStorage = (string) => {\n  let searches = getLocalStorage();\n  if (!searches || searches.indexOf(string) > -1) {\n    return false;\n  }\n  searches.push(string);\n  localStorage.setItem(\"cities\", JSON.stringify(searches));\n  return true;\n};\n\nexport const removeSearches = () => {\n  localStorage.setItem(\"cities\", JSON.stringify([]));\n};\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nexport const CardArticle = styled(motion.article)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 149px;\n  background-color: #393e50;\n  border-radius: 20px;\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);\n`;\n\nexport const CardContent = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 20px;\n  border-radius: 20px;\n`;\n\nexport const CardRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CardCol = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: ${(props) => props.justify || \"stretch\"};\n  text-align: left;\n  gap: 5px;\n`;\n\nexport const CardSpan = styled.span`\n  font-size: ${(props) => props.fontSize};\n`;\n\nexport const CardImg = styled.img`\n  height: 54px;\n`;\n\nexport const CardDelete = styled.span`\n  z-index: 1;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 16px;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    color: #ff6053;\n  }\n`;\n","import { useRef } from \"react\";\nimport {\n  CardArticle,\n  CardCol,\n  CardContent,\n  CardDelete,\n  CardImg,\n  CardRow,\n  CardSpan\n} from \"./styles\";\n\nconst Card = ({\n  city,\n  time,\n  temperature,\n  conditions,\n  img,\n  tempMax,\n  tempMin,\n  onDelete\n}) => {\n  const getTemp = (temp) => Math.round(temp - 273);\n  const getImg = (image) => `https://openweathermap.org/img/wn/${image}@2x.png`;\n  const ref = useRef();\n\n  const handleCardClick = () => {\n    console.log(\"Click delete \", ref.current.innerHTML);\n    onDelete(ref.current.innerHTML);\n  };\n\n  const animationConfig = {\n    initial: { x: 300, opacity: 0 },\n    animate: { x: 0, opacity: 1 },\n    exit: { x: -300, opacity: 0 }\n  };\n\n  if (city === \"Ошибка 429\")\n    return (\n      <CardArticle\n        variants={animationConfig}\n        initial=\"initial\"\n        animate=\"animate\"\n        exit=\"exit\"\n      >\n        <CardContent>\n          <CardRow>\n            <CardCol>\n              <CardSpan fontSize=\"40px\" ref={ref}>\n                {city}\n              </CardSpan>\n              <p>API-ключ OpenWeatherMap заблокирован!</p>\n            </CardCol>\n          </CardRow>\n\n          <CardRow>\n            <CardDelete onClick={handleCardClick}>x</CardDelete>\n          </CardRow>\n        </CardContent>\n      </CardArticle>\n    );\n\n  return (\n    <CardArticle\n      variants={animationConfig}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n    >\n      <CardContent>\n        <CardRow>\n          <CardCol>\n            <CardSpan fontSize=\"18px\" ref={ref}>\n              {city}\n            </CardSpan>\n          </CardCol>\n          <CardSpan fontSize=\"48px\">{getTemp(temperature)}°</CardSpan>\n        </CardRow>\n\n        <CardRow>\n          <CardCol justify=\"flex-end\">\n            <CardSpan fontSize=\"14px\">{conditions}</CardSpan>\n            <CardSpan fontSize=\"14px\">\n              Макс.: {getTemp(tempMax)}°, мин.: {getTemp(tempMin)}°\n            </CardSpan>\n          </CardCol>\n\n          <CardImg src={getImg(img)} alt={conditions} />\n          <CardDelete onClick={handleCardClick}>x</CardDelete>\n        </CardRow>\n      </CardContent>\n    </CardArticle>\n  );\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/preloader.1e6f5a70.gif\";","import styled from \"styled-components\";\n\nexport const LoaderImg = styled.img`\n  width: 24px;\n  height: 24px;\n`;\n","import loader from \"../../images/preloader.gif\";\nimport { LoaderImg } from \"./styles\";\n\nconst Loader = () => {\n  return <LoaderImg src={loader} alt=\"идет загрузка\" />;\n};\n\nexport default Loader;\n","import styled from \"styled-components\";\n\nexport const SearchForm = styled.form`\n  display: flex;\n  width: 100%;\n  margin: 20px auto;\n  margin-bottom: 10px;\n  padding: 0 10px;\n`;\n\nexport const SearchWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 24px 1fr 24px;\n  gap: 8px;\n  align-items: center;\n  box-sizing: border-box;\n  padding: 8px 12px;\n  border: 1px solid transparent;\n  border-radius: 16px;\n  background-color: #ffffff;\n  // transition: .2s linear;\n\n  &:focus-within button {\n    background-color: #050510;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  width: 24px;\n  height: 24px;\n  mask-position: center;\n  mask-repeat: no-repeat;\n  background-color: #c3c3c6;\n\n  -webkit-mask-image: url(https://raw.githubusercontent.com/RayFreedom88/app-weather-effector/d80271d74bd59767471570aded1393e05688f413/src/images/search.svg);\n  mask-image: url(https://raw.githubusercontent.com/RayFreedom88/app-weather-effector/d80271d74bd59767471570aded1393e05688f413/src/images/search.svg);\n  -webkit-mask-size: 20px;\n  -webkit-mask-position: center;\n  -webkit-mask-repeat: no-repeat;\n  cursor: pointer;\n  transition: .2s linear;\n`;\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  height: 20px;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  font-family: \"Raleway\", sans-serif;\n`;\n","import { useStore } from \"effector-react\";\nimport { useState } from \"react\";\nimport { $isLoading, fetchWeatherByCity } from \"../../models/weather\";\nimport Loader from \"../loader/loader\";\nimport { SearchButton, SearchForm, SearchInput, SearchWrapper } from \"./styles\";\n\nconst Search = () => {\n  const [value, setValue] = useState(\"\");\n  const isLoading = useStore($isLoading);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(\"add \", value);\n    fetchWeatherByCity(value);\n    setValue(\"\");\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchWrapper>\n        <SearchButton\n          className=\"search__btn\"\n          aria-label=\"Поиск\"\n          title=\"Поиск\"\n        />\n\n        <SearchInput\n          type=\"text\"\n          name=\"city\"\n          placeholder=\"Поиск по городам...\"\n          value={value}\n          onChange={handleChange}\n          // autocomplete=\"off\"\n        />\n        {isLoading && <Loader />}\n      </SearchWrapper>\n    </SearchForm>\n  );\n};\n\nexport default Search;\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nexport const WeatherSection = styled.section`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.6);\n  border-radius: 20px;\n  position: fixed;\n  top: calc(50% - 675px / 2);\n  left: calc(50% - 320px / 2);\n  height: 675px;\n  width: 320px;\n  background-color: #393e5b;\n  overflow: hidden;\n  color: #ffffff;\n`;\n\nexport const WeatherWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  box-shadow: 0 0 10px 10px rgba(0, 0, 0, 0.2) inset;\n  padding: 15px;\n`;\n\nexport const WeatherContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 100%;\n  height: 100%;\n  background: inherit;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const WeatherTitle = styled.h2`\n  margin: 0 10px;\n  margin-top: 20px;\n  text-align: left;\n`;\n\nexport const WeatherScroll = styled.div`\n  width: 100%;\n  height: 493px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  padding-right: 5px;\n  padding-left: 10px;\n`;\n\nexport const WeatherScrollWrap = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 270px;\n  height: 100%;\n  background: inherit;\n`;\n","import { useStore } from \"effector-react\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { useEffect } from \"react\";\nimport {\n  $city,\n  $cities,\n  addCitiesEvent,\n  deleteCityEvent,\n  fetchWeatherByCity\n} from \"../../models/weather\";\nimport { getLocalStorage, removeSearches } from \"../../utils/local-storage\";\nimport Card from \"../card/card\";\nimport Search from \"../search/search\";\nimport {\n  WeatherContent,\n  WeatherScroll,\n  WeatherScrollWrap,\n  WeatherSection,\n  WeatherTitle,\n  WeatherWrapper\n} from \"./styles\";\n\nconst Weather = () => {\n  const citiesState = useStore($cities);\n  const isExceedingLimit = useStore($city).code;\n\n  useEffect(() => {\n    if (!localStorage.cities) fetchWeatherByCity(\"москва\"); // добавляет карточку с Москвой при первом запуске\n\n    addCitiesEvent(getLocalStorage());\n  }, [citiesState]);\n\n  useEffect(() => {\n    if (!isExceedingLimit) {\n      // обновление данных через каждые 60 секунд\n      const update = setInterval(() => {\n        console.log(\"update\");\n        const citiesToUpdate = [];\n        getLocalStorage().map((item) => citiesToUpdate.push(item.name));\n        removeSearches();\n        citiesToUpdate.map((item) => fetchWeatherByCity(item));\n      }, 60000);\n      return () => clearInterval(update);\n    }\n  }, [isExceedingLimit]);\n\n  return (\n    <WeatherSection>\n      <WeatherWrapper>\n        <WeatherContent>\n          <WeatherTitle>Погода</WeatherTitle>\n          <Search />\n\n          <WeatherScroll>\n            <WeatherScrollWrap>\n              <AnimatePresence>\n                {citiesState.length > 0 ? (\n                  citiesState.map((city) => (\n                    <Card\n                      city={city.name}\n                      temperature={city.main.temp}\n                      conditions={city.weather[0].description}\n                      img={city.weather[0].icon}\n                      tempMax={city.main.temp_max}\n                      tempMin={city.main.temp_min}\n                      key={city.id}\n                      onDelete={deleteCityEvent}\n                    />\n                  ))\n                ) : (\n                  <p>Добавьте город</p>\n                )}\n              </AnimatePresence>\n            </WeatherScrollWrap>\n          </WeatherScroll>\n        </WeatherContent>\n      </WeatherWrapper>\n    </WeatherSection>\n  );\n};\n\nexport default Weather;\n","import { mockDataError } from \"../../utils/const\";\nimport {\n  getLocalStorage,\n  saveLocalStorage,\n  removeSearches,\n} from \"../../utils/local-storage\";\nimport {\n  $cities,\n  $city,\n  addCitiesEvent,\n  deleteCityEvent,\n  fetchFx,\n  $isLoading,\n} from \"./index\";\n\n// fetchFx.doneData.watch((data) => {\n//   console.log(\"fetchFx: \", data);\n// });\n\n// вариант 2\n$city.on(fetchFx.doneData, (_, dataCity) => {\n  const localCities = getLocalStorage();\n\n  if (localCities.length === 0 && dataCity.name) {\n    saveLocalStorage(dataCity);\n    return dataCity;\n  }\n\n  if (localCities.find((item) => item.name === dataCity.name)) {\n    return dataCity;\n  }\n\n  if (dataCity.name) {\n    saveLocalStorage(dataCity);\n    return dataCity;\n  }\n\n  if (dataCity.code === 429) {\n    console.log(\n      \"API-ключ OpenWeatherMap заблокирован из-за превышения количества запросов в минуту. В бесплатной учетной записи количество запросов составляет 60 запросов в минуту! Замените API_KEY или попробуйте воспользоваьтся приложением на следующий день. И очистите local storage, чтобы при первом запуске приложения была довалена карточка с погодой города Москва ибо кнопку сброса я еще не успел доделать либо так задумывалось ;)\"\n    );\n    removeSearches();\n    saveLocalStorage(mockDataError);\n    return dataCity;\n  }\n});\n\n$cities\n  .on(addCitiesEvent, (_, dataCities) => dataCities)\n  .on(deleteCityEvent, (state, deleteCity) => {\n    const newState = state.filter((city) => city.name !== deleteCity);\n    const newStateString = JSON.stringify([...newState]);\n    removeSearches();\n    localStorage.setItem(\"cities\", newStateString);\n  });\n\n$isLoading.on(fetchFx.pending, (_, isPending) => isPending);\n","import styled from \"styled-components\";\n\nexport const AppWrapper = styled.div`\n  text-align: center;\n  background-image: url(https://wallpaperaccess.com/full/2629319.png);\n  background-size: cover;\n  min-height: 100vh;\n`;\n","import Weather from \"../weather/weather\";\nimport \"../../models/init\";\nimport { AppWrapper } from \"./styles\";\n\nconst App = () => {\n  return (\n    <AppWrapper>\n      <main>\n        <h1 className=\"visually-hidden\">Прогноз погоды</h1>\n\n        <Weather />\n      </main>\n    </AppWrapper>\n  );\n};\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    font-family: \"Raleway\", sans-serif;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  a {\n    text-decoration: none;\n    color: #000;\n  }\n\n  .visually-hidden {\n    position: absolute;\n\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: 0;\n    padding: 0;\n\n    white-space: nowrap;\n\n    clip-path: inset(100%);\n    clip: rect(0 0 0 0);\n    overflow: hidden;\n  }\n\n  ::-webkit-scrollbar {\n    width: 5px;\n    height: 12px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: #2f2f37;\n    border-radius: 5px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #ff6053;\n    border-radius: 5px;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: transparent;\n  }\n\n  .weather-scroll-wrap {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    width: 270px;\n    height: 100%;\n    background: inherit;\n  }\n`;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./components/app/app\";\nimport GlobalStyles from \"./styles/global\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <GlobalStyles />\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}